version: '3.4'
services:
  devserver:
    container_name: kumori-devserver
    image: mathmagicians/kumori_build
    command: ["npm", "run", "serve"]
    working_dir: /tmp/services/frontend
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
        - type: bind
          source: ./
          target: /tmp
    depends_on:
      - postgrest
      - swagger
    networks:
      - kumori

  postgrest:
    container_name: kumori-postgrest
    image: postgrest/postgrest:latest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://${POSTGREST_CONNECTION_USER}:${POSTGREST_CONNECTION_PASSWORD}@postgres:5432/${POSTGREST_CONNECTION_DB}
      PGRST_DB_SCHEMA: ${POSTGREST_CONNECTION_SCHEMA}
      PGRST_DB_ANON_ROLE: ${POSTGREST_ANON_ROLE}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET} # Must be minimum 32 characters
    depends_on:
      - postgres
    networks:
      - kumori

  postgres:
    container_name: kumori-postgres
    image: mathmagicians/kumori_db:${VERSION}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_SCHEMA: ${POSTGREST_CONNECTION_SCHEMA}
      DB_CRUD_USER: ${POSTGREST_CONNECTION_USER}
      DB_CRUD_PASS: ${POSTGREST_CONNECTION_PASSWORD}
      DB_R_USER: ${POSTGREST_ANON_ROLE}
    networks:
      - kumori

  pgadmin:
    container_name: kumori-pgadmin
    image: chorss/docker-pgadmin4:latest
    ports:
    - "5050:5050"
    networks:
      - kumori
    volumes:
    - data-pgadmin:/data

  swagger:
    container_name: kumori-swagger
    image: swaggerapi/swagger-ui
    ports:
      - "8070:8080"
    environment:
      API_URL: http://localhost:3000/
    depends_on:
      - postgrest
    networks:
      - kumori

  neo4j:
    container_name: kumori-neo4j
    image: neo4j:latest
    ports:
    - "7474:7474"
    - "7687:7687"
    networks:
    - kumori
    environment:
      NEO4J_AUTH: none

  zookeeper:
    container_name: kumori-zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
    - kumori

  kafka:
    container_name: kumori-kafka
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.23.0.1
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
    - kumori

volumes:
  data-pgadmin:

networks:
  kumori:
    driver: bridge
