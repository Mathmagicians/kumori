version: '3.4'
services:
  web:
    container_name: kumori_web
    image: mathmagicians/kumori_web:${VERSION}
    ports:
      - "80:80"
    networks:
      - kumori
    restart: unless-stopped
    depends_on:
      - postgres
      - postgrest
      - swagger

  postgres:
    container_name: kumori_postgres
    image: postgres:11-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
    - data-postgres:/var/lib/postgresql/data
    networks:
      - kumori

  postgrest:
    container_name: kumori_postgrest
    image: postgrest/postgrest:latest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET} # Must be minimum 32 characters
      PGRST_SERVER_PROXY_URI: http://localhost:3000/
    depends_on:
      - postgres
    networks:
      - kumori

  flyway:
    container_name: kumori_flyway
    image: boxfuse/flyway:latest
    command: -url=jdbc:postgresql://postgres/${POSTGRES_DATABASE} -user=${POSTGRES_USERNAME} -password=${POSTGRES_PASSWORD} -connectRetries=60 -placeholders.dbrole=${POSTGRES_USERNAME} migrate
    volumes:
    - type: bind
      source: ./services/flyway/sql
      target: /flyway/sql
    depends_on:
      - postgres
    networks:
      - kumori

  swagger:
    container_name: kumori_swagger
    image: swaggerapi/swagger-ui
    ports:
      - "8070:8080"
    environment:
      API_URL: http://localhost:3000/
    depends_on:
      - postgrest
    networks:
      - kumori

networks:
  kumori:
    driver: bridge
